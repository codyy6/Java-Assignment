import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Cody
 */
public class EditFile extends javax.swing.JFrame {
    File f = new File("C:\\Users\\Cody\\OneDrive - Asia Pacific University\\Desktop\\Sem 5\\Java\\Reservation.txt");
    int ln,day;
    String [] details;
    ArrayList details2 = new ArrayList();
    String line,room,in,out,stay,name,phone,ic,email,payment;
    SimpleDateFormat dcn = new SimpleDateFormat("dd/MM/yyyy");  
    /**
     * Creates new form EditFile
     */
    public EditFile() {
        initComponents();
    }
    EditFile(String a){
        this();
        try {
            DefaultTableModel model = (DefaultTableModel)table.getModel();
            RandomAccessFile raf = new RandomAccessFile(f,"rw");
            while((line = raf.readLine())!=null){
                details = line.split(",");
                model.addRow(details); 
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(EditFile.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(EditFile.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    void checkRoom(String room){
        switch(room){
            case "room101":
                roomNumb.setSelectedIndex(0);
                break;
            case "room102":
                roomNumb.setSelectedIndex(1);
                break;
            case "room103":
                roomNumb.setSelectedIndex(2);
                break;
            case "room104":
                roomNumb.setSelectedIndex(3);
                break;
            case "room105":
                roomNumb.setSelectedIndex(4);
                break;
            case "room106":
                roomNumb.setSelectedIndex(5);
                break;
            case "room107":
                roomNumb.setSelectedIndex(6);
                break;
            case "room108":
                roomNumb.setSelectedIndex(7);
                break;
            case "room109":
                roomNumb.setSelectedIndex(8);
                break;
            case "room110":
                roomNumb.setSelectedIndex(9);
                break;
            case "room201":
                roomNumb.setSelectedIndex(10);
                break;
            case "room202":
                roomNumb.setSelectedIndex(11);
                break;
            case "room203":
                roomNumb.setSelectedIndex(12);
                break;
            case "room204":
                roomNumb.setSelectedIndex(13);
                break;
            case "room205":
                roomNumb.setSelectedIndex(14);
                break;
            case "room206":
                roomNumb.setSelectedIndex(15);
                break;
            case "room207":
                roomNumb.setSelectedIndex(16);
                break;
            case "room208":
                roomNumb.setSelectedIndex(17);
                break;
            case "room209":
                roomNumb.setSelectedIndex(18);
                break;
            case "room210":
                roomNumb.setSelectedIndex(19);
                break;
        }
    }
    void clearTable(){
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        int rows = model.getRowCount();
        for (int i = rows-1; i >= 0 ; i--){
            model.removeRow(i);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        search = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        roomNumb = new javax.swing.JComboBox<>();
        checkIn = new javax.swing.JTextField();
        checkOut = new javax.swing.JTextField();
        days = new javax.swing.JTextField();
        cusName = new javax.swing.JTextField();
        cusPhone = new javax.swing.JTextField();
        cusIC = new javax.swing.JTextField();
        cusEmail = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        amount = new javax.swing.JTextField();
        calendar = new com.toedter.calendar.JCalendar();
        inButton = new javax.swing.JButton();
        outButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        back = new javax.swing.JButton();
        receipt = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room Number", "Check In Date", "Check Out Date", "Days of Stay", "Customer Name", "Customer Phone Number", "Customer IC", "Customer Email", "Amount to be Paid"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        roomNumb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "room101", "room102", "room103", "room104", "room105", "room106", "room107", "room108", "room109", "room110", "room201", "room202", "room203", "room204", "room205", "room206", "room207", "room208", "room209", "room210" }));

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        inButton.setText("Check In");
        inButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inButtonActionPerformed(evt);
            }
        });

        outButton.setText("Check Out");
        outButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        receipt.setText("Print Receipt");
        receipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Days of Stay");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Name");
        jLabel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Phone Number");
        jLabel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("IC");
        jLabel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Email");
        jLabel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Payment");
        jLabel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(back)
                            .addComponent(searchButton))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(calendar, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(inButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(outButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkOut, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkIn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(receipt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 293, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cusEmail, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cusIC, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cusPhone, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cusName, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(roomNumb, javax.swing.GroupLayout.Alignment.TRAILING, 0, 181, Short.MAX_VALUE)
                                .addComponent(amount, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(days, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(deleteButton)
                                .addGap(28, 28, 28)
                                .addComponent(updateButton)))))
                .addGap(37, 37, 37))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(roomNumb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(checkIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(inButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(checkOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(outButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(days, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cusName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cusPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cusIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cusEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(calendar, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateButton)
                    .addComponent(deleteButton)
                    .addComponent(receipt)
                    .addComponent(back))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        room = model.getValueAt(table.getSelectedRow(),0).toString();
        in = model.getValueAt(table.getSelectedRow(),1).toString();
        out = model.getValueAt(table.getSelectedRow(),2).toString();
        stay = model.getValueAt(table.getSelectedRow(),3).toString();
        name = model.getValueAt(table.getSelectedRow(),4).toString();
        phone = model.getValueAt(table.getSelectedRow(),5).toString();
        ic = model.getValueAt(table.getSelectedRow(),6).toString();
        email = model.getValueAt(table.getSelectedRow(),7).toString();
        payment = model.getValueAt(table.getSelectedRow(),8).toString();
    
        checkRoom(room);
        checkIn.setText(in);
        checkOut.setText(out);
        days.setText(stay);
        cusName.setText(name);
        cusPhone.setText(phone);
        cusIC.setText(ic);
        cusEmail.setText(email);
        amount.setText(payment);
    }//GEN-LAST:event_tableMouseClicked
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        try {
            DefaultTableModel model = (DefaultTableModel)table.getModel();
            FileWriter fw = new FileWriter(f);
            BufferedWriter bw = new BufferedWriter(fw);
            if (table.getSelectedRowCount() == 1){
                room = roomNumb.getSelectedItem().toString();
                in = checkIn.getText();
                out = checkOut.getText();
                stay =days.getText();
                name = cusName.getText();
                phone = cusPhone.getText();
                ic = cusIC.getText();
                email = cusEmail.getText();
                payment = amount.getText();
                if ("".equals(in.trim())||"".equals(out.trim())||"".equals(stay.trim())||"".equals(name.trim())||"".equals(phone.trim())||"".equals(ic.trim())||"".equals(email.trim())||"".equals(payment.trim())){
                    JOptionPane.showMessageDialog(null, "Data cannot be empty, please fill in the empty data.");
                }else{
                    int a = codes.calculate(in,out);
                    days.setText(Integer.toString(a));
                    a = (int) (a*350*1.1+(a*10));
                    amount.setText(Integer.toString(a));
                    model.setValueAt(room,table.getSelectedRow(),0);
                    model.setValueAt(in,table.getSelectedRow(),1);
                    model.setValueAt(out,table.getSelectedRow(),2);
                    model.setValueAt(codes.calculate(in,out),table.getSelectedRow(),3);
                    model.setValueAt(name,table.getSelectedRow(),4);
                    model.setValueAt(phone,table.getSelectedRow(),5);
                    model.setValueAt(ic,table.getSelectedRow(),6);
                    model.setValueAt(email,table.getSelectedRow(),7);
                    model.setValueAt(a,table.getSelectedRow(),8);
                    for (int i = 0; i<table.getRowCount();i++){
                        for (int j = 0; j < table.getColumnCount() ;j++){
                            bw.write(table.getValueAt(i,j).toString()+",");
                        }
                        bw.newLine();
                    }
                    bw.close();
                    fw.close();
                    JOptionPane.showMessageDialog(null, "Successfully updated.");
                }
            }else{
                JOptionPane.showMessageDialog(null, "No rows selected for update.");
            }
            // TODO add your handling code here:
        } catch (FileNotFoundException ex) {
            Logger.getLogger(EditFile.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(EditFile.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateButtonActionPerformed
    private void inButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inButtonActionPerformed
       checkIn.setText(dcn.format(calendar.getDate()));
    }//GEN-LAST:event_inButtonActionPerformed
    private void outButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outButtonActionPerformed
       checkOut.setText(dcn.format(calendar.getDate()));
    }//GEN-LAST:event_outButtonActionPerformed
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        try {
            DefaultTableModel model = (DefaultTableModel)table.getModel();
            FileWriter fw = new FileWriter(f);
            BufferedWriter bw = new BufferedWriter(fw);
            int row = table.getSelectedRow();
            if (table.getSelectedRowCount() ==1){
                model.removeRow(row);
                for (int i = 0; i<table.getRowCount();i++){
                    for (int j = 0; j < table.getColumnCount() ;j++){
                        bw.write(table.getValueAt(i,j).toString()+",");
                    }
                    bw.newLine();
                }
            bw.close();
            fw.close();
            }
        } catch (IOException ex) {
            Logger.getLogger(EditFile.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String s = search.getText();
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        try {
            clearTable();
            RandomAccessFile raf = new RandomAccessFile(f,"rw");
            while ((line = raf.readLine()) != null){
                if (line.contains(s)){
                    details = line.split(",");
                    model.addRow(details);
                }else{
                    details2.add(line);
                    }
                
                }
            for (int i = details2.size(); i>0 ;i--){
                line = (String) details2.get(i-1);
                details = line.split(",");
                model.addRow(details);
            }
            details2.clear();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(EditFile.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(EditFile.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchButtonActionPerformed
    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_backActionPerformed
    private void receiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptActionPerformed
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        room = model.getValueAt(table.getSelectedRow(),0).toString();
        in = model.getValueAt(table.getSelectedRow(),1).toString();
        out = model.getValueAt(table.getSelectedRow(),2).toString();
        stay = model.getValueAt(table.getSelectedRow(),3).toString();
        name = model.getValueAt(table.getSelectedRow(),4).toString();
        phone = model.getValueAt(table.getSelectedRow(),5).toString();
        ic = model.getValueAt(table.getSelectedRow(),6).toString();
        email = model.getValueAt(table.getSelectedRow(),7).toString();
        payment = model.getValueAt(table.getSelectedRow(),8).toString();
        int a = ((Integer.parseInt(payment)-(Integer.parseInt(stay)*10)))/11*10;
        int tax = (int) (a * 0.1);
        int tax2 = (a/350)*10;
        System.out.println(a);
        new Receipt(room,name,in,out,stay,Integer.toString(a),Integer.toString(tax),Integer.toString(tax2),payment).setVisible(true);
    }//GEN-LAST:event_receiptActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditFile().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amount;
    private javax.swing.JButton back;
    private com.toedter.calendar.JCalendar calendar;
    private javax.swing.JTextField checkIn;
    private javax.swing.JTextField checkOut;
    private javax.swing.JTextField cusEmail;
    private javax.swing.JTextField cusIC;
    private javax.swing.JTextField cusName;
    private javax.swing.JTextField cusPhone;
    private javax.swing.JTextField days;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton inButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton outButton;
    private javax.swing.JButton receipt;
    private javax.swing.JComboBox<String> roomNumb;
    private javax.swing.JTextField search;
    private javax.swing.JButton searchButton;
    private javax.swing.JTable table;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}